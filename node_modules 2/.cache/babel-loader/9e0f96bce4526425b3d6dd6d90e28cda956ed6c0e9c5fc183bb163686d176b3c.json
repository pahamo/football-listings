{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';const supabaseUrl='https://nkfuzkrazehjivzmdrvt.supabase.co';const supabaseAnonKey='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5rZnV6a3JhemVoaml2em1kcnZ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcyNjI5MzAsImV4cCI6MjA3MjgzODkzMH0.CNW1EUtcC4JWfDy-WzOIVDfv7rnXzsz1qqQyRTZVyXU';export const supabase=createClient(supabaseUrl,supabaseAnonKey);// Simple, minimal types\n// Only Sky Sports and TNT Sports for simplicity\nexport const SIMPLE_BROADCASTERS=[{id:1,name:'Sky Sports'},{id:2,name:'TNT Sports'}];// Get fixtures with basic team info using simple JOINs\nexport async function getSimpleFixtures(){try{console.log('[Supabase] Loading fixtures with basic table JOINs...');// Use basic tables with simple JOINs - no views\nconst{data:fixtures,error}=await supabase.from('fixtures').select(\"\\n        id,\\n        utc_kickoff,\\n        home_team_id,\\n        away_team_id,\\n        home_team:home_team_id(name),\\n        away_team:away_team_id(name)\\n      \").gte('utc_kickoff','2024-08-01T00:00:00.000Z').order('utc_kickoff',{ascending:true}).limit(20);if(error){console.error('[Supabase] Error loading fixtures:',error);return[];}if(!fixtures){console.warn('[Supabase] No fixtures returned');return[];}console.log(\"[Supabase] Loaded \".concat(fixtures.length,\" fixtures successfully\"));// Get broadcast data for these fixtures\nconst fixtureIds=fixtures.map(f=>f.id);const{data:broadcasts}=await supabase.from('broadcasts').select('fixture_id, provider_id').in('fixture_id',fixtureIds);// Create broadcast lookup\nconst broadcastLookup={};(broadcasts||[]).forEach(b=>{broadcastLookup[b.fixture_id]=b.provider_id;});// Map to simple format\nreturn fixtures.map(fixture=>{var _home_team,_away_team,_SIMPLE_BROADCASTERS$;return{id:fixture.id,kickoff_utc:fixture.utc_kickoff,home_team:((_home_team=fixture.home_team)===null||_home_team===void 0?void 0:_home_team.name)||'Unknown',away_team:((_away_team=fixture.away_team)===null||_away_team===void 0?void 0:_away_team.name)||'Unknown',broadcaster:((_SIMPLE_BROADCASTERS$=SIMPLE_BROADCASTERS.find(b=>b.id===broadcastLookup[fixture.id]))===null||_SIMPLE_BROADCASTERS$===void 0?void 0:_SIMPLE_BROADCASTERS$.name)||undefined};});}catch(error){console.error('[Supabase] Unexpected error:',error);return[];}}// Save broadcaster assignment (simple)\nexport async function saveBroadcaster(fixtureId,providerId){try{console.log(\"[Supabase] Saving broadcaster for fixture \".concat(fixtureId,\": provider \").concat(providerId));if(!providerId){// Remove broadcaster\nconst{error}=await supabase.from('broadcasts').delete().eq('fixture_id',fixtureId);if(error)throw error;console.log(\"[Supabase] Removed broadcaster for fixture \".concat(fixtureId));}else{// Add/update broadcaster\nconst{error}=await supabase.from('broadcasts').upsert({fixture_id:fixtureId,provider_id:providerId});if(error)throw error;console.log(\"[Supabase] Saved broadcaster for fixture \".concat(fixtureId));}}catch(error){console.error(\"[Supabase] Error saving broadcaster:\",error);throw error;}}","map":{"version":3,"names":["createClient","supabaseUrl","supabaseAnonKey","supabase","SIMPLE_BROADCASTERS","id","name","getSimpleFixtures","console","log","data","fixtures","error","from","select","gte","order","ascending","limit","warn","concat","length","fixtureIds","map","f","broadcasts","in","broadcastLookup","forEach","b","fixture_id","provider_id","fixture","_home_team","_away_team","_SIMPLE_BROADCASTERS$","kickoff_utc","utc_kickoff","home_team","away_team","broadcaster","find","undefined","saveBroadcaster","fixtureId","providerId","delete","eq","upsert"],"sources":["/Users/p/Documents/pl_tv_mvp_spa/react-version/src/services/supabase-simple.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = 'https://nkfuzkrazehjivzmdrvt.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5rZnV6a3JhemVoaml2em1kcnZ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcyNjI5MzAsImV4cCI6MjA3MjgzODkzMH0.CNW1EUtcC4JWfDy-WzOIVDfv7rnXzsz1qqQyRTZVyXU';\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Simple, minimal types\nexport interface SimpleFixture {\n  id: number;\n  kickoff_utc: string;\n  home_team: string;\n  away_team: string;\n  broadcaster?: string;\n}\n\n// Only Sky Sports and TNT Sports for simplicity\nexport const SIMPLE_BROADCASTERS = [\n  { id: 1, name: 'Sky Sports' },\n  { id: 2, name: 'TNT Sports' }\n];\n\n// Get fixtures with basic team info using simple JOINs\nexport async function getSimpleFixtures(): Promise<SimpleFixture[]> {\n  try {\n    console.log('[Supabase] Loading fixtures with basic table JOINs...');\n    \n    // Use basic tables with simple JOINs - no views\n    const { data: fixtures, error } = await supabase\n      .from('fixtures')\n      .select(`\n        id,\n        utc_kickoff,\n        home_team_id,\n        away_team_id,\n        home_team:home_team_id(name),\n        away_team:away_team_id(name)\n      `)\n      .gte('utc_kickoff', '2024-08-01T00:00:00.000Z')\n      .order('utc_kickoff', { ascending: true })\n      .limit(20);\n      \n    if (error) {\n      console.error('[Supabase] Error loading fixtures:', error);\n      return [];\n    }\n    \n    if (!fixtures) {\n      console.warn('[Supabase] No fixtures returned');\n      return [];\n    }\n    \n    console.log(`[Supabase] Loaded ${fixtures.length} fixtures successfully`);\n    \n    // Get broadcast data for these fixtures\n    const fixtureIds = fixtures.map(f => f.id);\n    const { data: broadcasts } = await supabase\n      .from('broadcasts')\n      .select('fixture_id, provider_id')\n      .in('fixture_id', fixtureIds);\n    \n    // Create broadcast lookup\n    const broadcastLookup: Record<number, number> = {};\n    (broadcasts || []).forEach(b => {\n      broadcastLookup[b.fixture_id] = b.provider_id;\n    });\n    \n    // Map to simple format\n    return fixtures.map(fixture => ({\n      id: fixture.id,\n      kickoff_utc: fixture.utc_kickoff,\n      home_team: (fixture as any).home_team?.name || 'Unknown',\n      away_team: (fixture as any).away_team?.name || 'Unknown',\n      broadcaster: SIMPLE_BROADCASTERS.find(b => b.id === broadcastLookup[fixture.id])?.name || undefined\n    }));\n    \n  } catch (error) {\n    console.error('[Supabase] Unexpected error:', error);\n    return [];\n  }\n}\n\n// Save broadcaster assignment (simple)\nexport async function saveBroadcaster(fixtureId: number, providerId: number | null): Promise<void> {\n  try {\n    console.log(`[Supabase] Saving broadcaster for fixture ${fixtureId}: provider ${providerId}`);\n    \n    if (!providerId) {\n      // Remove broadcaster\n      const { error } = await supabase\n        .from('broadcasts')\n        .delete()\n        .eq('fixture_id', fixtureId);\n        \n      if (error) throw error;\n      console.log(`[Supabase] Removed broadcaster for fixture ${fixtureId}`);\n    } else {\n      // Add/update broadcaster\n      const { error } = await supabase\n        .from('broadcasts')\n        .upsert({\n          fixture_id: fixtureId,\n          provider_id: providerId\n        });\n        \n      if (error) throw error;\n      console.log(`[Supabase] Saved broadcaster for fixture ${fixtureId}`);\n    }\n  } catch (error) {\n    console.error(`[Supabase] Error saving broadcaster:`, error);\n    throw error;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}