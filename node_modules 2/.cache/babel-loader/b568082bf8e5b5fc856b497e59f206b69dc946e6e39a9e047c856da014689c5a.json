{"ast":null,"code":"import _objectSpread from\"/Users/p/Documents/pl_tv_mvp_spa/react-version/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createClient}from'@supabase/supabase-js';// Get credentials from environment variables with fallbacks\nconst supabaseUrl=process.env.REACT_APP_SUPABASE_URL||'https://nkfuzkrazehjivzmdrvt.supabase.co';const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY||'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5rZnV6a3JhemVoaml2em1kcnZ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcyNjI5MzAsImV4cCI6MjA3MjgzODkzMH0.CNW1EUtcC4JWfDy-WzOIVDfv7rnXzsz1qqQyRTZVyXU';// Log a warning if using fallback credentials\nif(!process.env.REACT_APP_SUPABASE_URL||!process.env.REACT_APP_SUPABASE_ANON_KEY){console.warn('[Supabase] Using fallback credentials. Consider setting REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY in your .env file.');}export const supabase=createClient(supabaseUrl,supabaseAnonKey);function mapFixtureRow(row){var _row$matchday,_row$venue;let providersByFixture=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const kickoffIso=row.utc_kickoff;const mw=(_row$matchday=row.matchday)!==null&&_row$matchday!==void 0?_row$matchday:null;const home={id:row.home_team_id,name:row.home_name,slug:row.home_slug,crest:row.home_crest||null};const away={id:row.away_team_id,name:row.away_name,slug:row.away_slug,crest:row.away_crest||null};const providers=providersByFixture[row.id]||[];// Check blackout status from localStorage (matching original SPA logic)\nconst blackoutFixtures=JSON.parse(localStorage.getItem('blackoutFixtures')||'[]');const isBlackout=blackoutFixtures.includes(row.id);return{id:row.id,sport:'football',competition:'premier-league',matchweek:mw,kickoff_utc:kickoffIso,venue:(_row$venue=row.venue)!==null&&_row$venue!==void 0?_row$venue:null,home,away,providers_uk:providers,blackout:{is_blackout:isBlackout,reason:isBlackout?'No UK broadcaster announced':null},status:row.status||'scheduled'};}async function getBroadcastsForFixtures(ids){try{if(!ids||!ids.length)return[];const{data,error}=await supabase.from('broadcasts').select('fixture_id,provider_id').in('fixture_id',ids);if(error){console.warn('[Supabase] getBroadcastsForFixtures error',error);return[];}return data||[];}catch(e){console.warn('[Supabase] getBroadcastsForFixtures error',e);return[];}}async function getProvidersByIds(){let ids=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];try{let query=supabase.from('providers').select('id,slug,display_name,type,url').order('display_name',{ascending:true});if(ids.length>0){query=query.in('id',ids);}const{data:rows,error}=await query;if(error){console.warn('[Supabase] getProvidersByIds error',error);return[];}return(rows||[]).map(p=>({id:p.slug||String(p.id),name:p.display_name||p.name||'Unknown',type:p.type||'unknown',href:p.url||undefined,status:'confirmed'}));}catch(e){console.warn('[Supabase] getProvidersByIds error',e);return[];}}export async function getFixtures(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const{teamSlug,dateFrom,dateTo,limit=100,order='asc',competitionId}=params;let query=supabase.from('fixtures_with_teams').select(\"\\n        id,matchday,utc_kickoff,venue,status,\\n        home_team_id,home_name,home_slug,home_crest,\\n        away_team_id,away_name,away_slug,away_crest\\n      \").order('utc_kickoff',{ascending:order==='asc'}).limit(limit);if(dateFrom){query=query.gte('utc_kickoff',dateFrom);}if(dateTo){query=query.lte('utc_kickoff',dateTo);}if(competitionId){query=query.eq('competition_id',competitionId);}const{data:rows,error}=await query;if(error){console.warn('[Supabase] getFixtures error',error);return[];}if(!rows||!rows.length)return[];// Enrich providers in a second step\nconst ids=rows.map(r=>r.id).filter(Boolean);let providersByFixture={};if(ids.length){const bcasts=await getBroadcastsForFixtures(ids);const providerIds=Array.from(new Set(bcasts.map(b=>b.provider_id).filter(Boolean)));const provs=providerIds.length?await getProvidersByIds(providerIds):[];const byPk=Object.fromEntries(provs.map(p=>[p.id,p]));for(const b of bcasts){const fId=b.fixture_id;const p=byPk[String(b.provider_id)];const entry=p?_objectSpread({},p):null;if(!providersByFixture[fId])providersByFixture[fId]=[];if(entry)providersByFixture[fId].push(entry);}}let mapped=rows.map(r=>mapFixtureRow(r,providersByFixture));// Apply team filter if specified\nif(teamSlug){mapped=mapped.filter(fx=>fx.home.slug===teamSlug||fx.away.slug===teamSlug);}// Apply filtering logic to exclude test fixtures (IDs <= 30)\n// This matches the current SPA's filtering logic\nmapped=mapped.filter(f=>f.id&&f.id>30);return mapped;}catch(e){console.warn('[Supabase] getFixtures error',e);return[];}}export async function getFixtureById(id){try{if(!id)return undefined;const{data:rows,error}=await supabase.from('fixtures_with_teams').select(\"\\n        id,matchday,utc_kickoff,venue,status,\\n        home_team_id,home_name,home_slug,home_crest,\\n        away_team_id,away_name,away_slug,away_crest\\n      \").eq('id',id).limit(1);if(error){console.warn('[Supabase] getFixtureById error',error);return undefined;}const row=rows===null||rows===void 0?void 0:rows[0];if(!row)return undefined;const bcasts=await getBroadcastsForFixtures([row.id]);const providerIds=Array.from(new Set(bcasts.map(b=>b.provider_id).filter(Boolean)));const provs=providerIds.length?await getProvidersByIds(providerIds):[];const byPk=Object.fromEntries(provs.map(p=>[p.id,p]));const providersByFixture={};providersByFixture[row.id]=bcasts.map(b=>{const p=byPk[String(b.provider_id)];return p?_objectSpread({},p):null;}).filter(Boolean);return mapFixtureRow(row,providersByFixture);}catch(e){console.warn('[Supabase] getFixtureById error',e);return undefined;}}// Admin API functions\nexport const BROADCASTERS=[{id:1,name:'Sky Sports',type:'tv'},{id:2,name:'TNT Sports',type:'tv'},{id:3,name:'BBC Sport',type:'tv'},{id:4,name:'Amazon Prime Video',type:'streaming'},{id:-1,name:'ðŸš« Blackout (No TV)',type:'blackout'}];export async function getAdminFixtures(){let competitionId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;try{// Get fixtures from current season\nconst currentSeasonStart='2024-08-01T00:00:00.000Z';const{data:rows,error}=await supabase.from('fixtures_with_teams').select(\"\\n        id,matchday,utc_kickoff,venue,status,\\n        home_team_id,home_name,home_slug,home_crest,\\n        away_team_id,away_name,away_slug,away_crest\\n      \").eq('competition_id',competitionId).gte('utc_kickoff',currentSeasonStart).order('utc_kickoff',{ascending:true});if(error){console.warn('[Supabase] getAdminFixtures error',error);return[];}if(!rows||!rows.length)return[];// Apply same filtering as main app (exclude test fixtures)\nconst validRows=rows.filter(r=>r.id&&r.id>30);// Get all broadcasts for these fixtures\nconst fixtureIds=validRows.map(r=>r.id);const{data:broadcasts,error:broadcastError}=await supabase.from('broadcasts').select('fixture_id,provider_id').in('fixture_id',fixtureIds);if(broadcastError){console.warn('[Supabase] Error loading broadcasts:',broadcastError);}// Create broadcast lookup\nconst broadcastLookup={};(broadcasts||[]).forEach(b=>{broadcastLookup[b.fixture_id]=b;});// Map fixtures with broadcast info\nconst adminFixtures=validRows.map(row=>{var _BROADCASTERS$find;const broadcast=broadcastLookup[row.id]||null;const fixture=mapFixtureRow(row);return _objectSpread(_objectSpread({},fixture),{},{broadcast:broadcast?{provider_id:broadcast.provider_id,provider_display_name:((_BROADCASTERS$find=BROADCASTERS.find(b=>b.id===broadcast.provider_id))===null||_BROADCASTERS$find===void 0?void 0:_BROADCASTERS$find.name)||'Unknown'}:null});});return adminFixtures;}catch(e){console.warn('[Supabase] getAdminFixtures error',e);return[];}}export async function saveBroadcast(fixtureId,providerId){try{if(providerId===''||providerId==='0'||providerId==='-1'||providerId===null){// Delete existing broadcast record\nconst{error}=await supabase.from('broadcasts').delete().eq('fixture_id',fixtureId);if(error){throw error;}// Handle blackout localStorage logic\nif(providerId==='-1'){const blackoutFixtures=JSON.parse(localStorage.getItem('blackoutFixtures')||'[]');if(!blackoutFixtures.includes(fixtureId)){blackoutFixtures.push(fixtureId);localStorage.setItem('blackoutFixtures',JSON.stringify(blackoutFixtures));}}else{// Remove from blackout list if setting to empty\nconst blackoutFixtures=JSON.parse(localStorage.getItem('blackoutFixtures')||'[]');const updatedBlackout=blackoutFixtures.filter(id=>id!==fixtureId);localStorage.setItem('blackoutFixtures',JSON.stringify(updatedBlackout));}}else{// Add/update broadcaster - remove from blackout list first\nconst blackoutFixtures=JSON.parse(localStorage.getItem('blackoutFixtures')||'[]');const updatedBlackout=blackoutFixtures.filter(id=>id!==fixtureId);localStorage.setItem('blackoutFixtures',JSON.stringify(updatedBlackout));const broadcastData={fixture_id:fixtureId,provider_id:parseInt(String(providerId))};// Upsert the broadcast record\nconst{error}=await supabase.from('broadcasts').upsert(broadcastData);if(error){throw error;}}}catch(e){console.error('[Supabase] saveBroadcast error',e);throw e;}}// Blackout helper functions\nexport function isFixtureBlackout(fixtureId){const blackoutFixtures=JSON.parse(localStorage.getItem('blackoutFixtures')||'[]');return blackoutFixtures.includes(fixtureId);}export function isFixtureConfirmed(fixture){return!!(fixture.broadcast&&fixture.broadcast.provider_id&&!isFixtureBlackout(fixture.id));}export function isFixturePending(fixture){return!fixture.broadcast&&!isFixtureBlackout(fixture.id);}// Teams API\nexport async function getTeams(){try{const{data,error}=await supabase.from('teams').select('id,name,slug,crest').order('name',{ascending:true});if(error){console.warn('[Supabase] getTeams error',error);return[];}return(data||[]).map(t=>{var _t$crest;return{id:t.id,name:t.name,slug:t.slug,crest:(_t$crest=t.crest)!==null&&_t$crest!==void 0?_t$crest:null};});}catch(e){console.warn('[Supabase] getTeams error',e);return[];}}","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","console","warn","supabase","mapFixtureRow","row","_row$matchday","_row$venue","providersByFixture","arguments","length","undefined","kickoffIso","utc_kickoff","mw","matchday","home","id","home_team_id","name","home_name","slug","home_slug","crest","home_crest","away","away_team_id","away_name","away_slug","away_crest","providers","blackoutFixtures","JSON","parse","localStorage","getItem","isBlackout","includes","sport","competition","matchweek","kickoff_utc","venue","providers_uk","blackout","is_blackout","reason","status","getBroadcastsForFixtures","ids","data","error","from","select","in","e","getProvidersByIds","query","order","ascending","rows","map","p","String","display_name","type","href","url","getFixtures","params","teamSlug","dateFrom","dateTo","limit","competitionId","gte","lte","eq","r","filter","Boolean","bcasts","providerIds","Array","Set","b","provider_id","provs","byPk","Object","fromEntries","fId","fixture_id","entry","_objectSpread","push","mapped","fx","f","getFixtureById","BROADCASTERS","getAdminFixtures","currentSeasonStart","validRows","fixtureIds","broadcasts","broadcastError","broadcastLookup","forEach","adminFixtures","_BROADCASTERS$find","broadcast","fixture","provider_display_name","find","saveBroadcast","fixtureId","providerId","delete","setItem","stringify","updatedBlackout","broadcastData","parseInt","upsert","isFixtureBlackout","isFixtureConfirmed","isFixturePending","getTeams","t","_t$crest"],"sources":["/Users/p/Documents/pl_tv_mvp_spa/react-version/src/services/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport type { Fixture, FixturesApiParams, Provider, Team } from '../types';\n\n// Get credentials from environment variables with fallbacks\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://nkfuzkrazehjivzmdrvt.supabase.co';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5rZnV6a3JhemVoaml2em1kcnZ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcyNjI5MzAsImV4cCI6MjA3MjgzODkzMH0.CNW1EUtcC4JWfDy-WzOIVDfv7rnXzsz1qqQyRTZVyXU';\n\n// Log a warning if using fallback credentials\nif (!process.env.REACT_APP_SUPABASE_URL || !process.env.REACT_APP_SUPABASE_ANON_KEY) {\n  console.warn('[Supabase] Using fallback credentials. Consider setting REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY in your .env file.');\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\ninterface FixtureRow {\n  id: number;\n  matchday?: number | null;\n  utc_kickoff: string;\n  venue?: string | null;\n  status?: string;\n  home_team_id: number;\n  home_name: string;\n  home_slug: string;\n  home_crest?: string | null;\n  away_team_id: number;\n  away_name: string;\n  away_slug: string;\n  away_crest?: string | null;\n}\n\ninterface BroadcastRow {\n  fixture_id: number;\n  provider_id: number;\n}\n\ninterface ProviderRow {\n  id: number;\n  slug?: string;\n  display_name?: string;\n  name?: string;\n  type?: string;\n  url?: string;\n}\n\nfunction mapFixtureRow(row: FixtureRow, providersByFixture: Record<number, Provider[]> = {}): Fixture {\n  const kickoffIso = row.utc_kickoff;\n  const mw = row.matchday ?? null;\n  const home: Team = {\n    id: row.home_team_id,\n    name: row.home_name,\n    slug: row.home_slug,\n    crest: row.home_crest || null,\n  };\n  const away: Team = {\n    id: row.away_team_id,\n    name: row.away_name,\n    slug: row.away_slug,\n    crest: row.away_crest || null,\n  };\n  const providers = providersByFixture[row.id] || [];\n\n  // Check blackout status from localStorage (matching original SPA logic)\n  const blackoutFixtures = JSON.parse(localStorage.getItem('blackoutFixtures') || '[]');\n  const isBlackout = blackoutFixtures.includes(row.id);\n\n  return {\n    id: row.id,\n    sport: 'football',\n    competition: 'premier-league',\n    matchweek: mw,\n    kickoff_utc: kickoffIso,\n    venue: row.venue ?? null,\n    home,\n    away,\n    providers_uk: providers,\n    blackout: { \n      is_blackout: isBlackout, \n      reason: isBlackout ? 'No UK broadcaster announced' : null \n    },\n    status: row.status || 'scheduled',\n  };\n}\n\nasync function getBroadcastsForFixtures(ids: number[]): Promise<BroadcastRow[]> {\n  try {\n    if (!ids || !ids.length) return [];\n    \n    const { data, error } = await supabase\n      .from('broadcasts')\n      .select('fixture_id,provider_id')\n      .in('fixture_id', ids);\n      \n    if (error) {\n      console.warn('[Supabase] getBroadcastsForFixtures error', error);\n      return [];\n    }\n    \n    return data || [];\n  } catch (e) {\n    console.warn('[Supabase] getBroadcastsForFixtures error', e);\n    return [];\n  }\n}\n\nasync function getProvidersByIds(ids: number[] = []): Promise<Provider[]> {\n  try {\n    let query = supabase\n      .from('providers')\n      .select('id,slug,display_name,type,url')\n      .order('display_name', { ascending: true });\n      \n    if (ids.length > 0) {\n      query = query.in('id', ids);\n    }\n    \n    const { data: rows, error } = await query;\n    \n    if (error) {\n      console.warn('[Supabase] getProvidersByIds error', error);\n      return [];\n    }\n    \n    return (rows || []).map((p: ProviderRow) => ({\n      id: p.slug || String(p.id),\n      name: p.display_name || p.name || 'Unknown',\n      type: p.type || 'unknown',\n      href: p.url || undefined,\n      status: 'confirmed',\n    }));\n  } catch (e) {\n    console.warn('[Supabase] getProvidersByIds error', e);\n    return [];\n  }\n}\n\nexport async function getFixtures(params: FixturesApiParams = {}): Promise<Fixture[]> {\n  try {\n    const {\n      teamSlug,\n      dateFrom,\n      dateTo,\n      limit = 100,\n      order = 'asc',\n      competitionId\n    } = params;\n\n    let query = supabase\n      .from('fixtures_with_teams')\n      .select(`\n        id,matchday,utc_kickoff,venue,status,\n        home_team_id,home_name,home_slug,home_crest,\n        away_team_id,away_name,away_slug,away_crest\n      `)\n      .order('utc_kickoff', { ascending: order === 'asc' })\n      .limit(limit);\n      \n    if (dateFrom) {\n      query = query.gte('utc_kickoff', dateFrom);\n    }\n    if (dateTo) {\n      query = query.lte('utc_kickoff', dateTo);\n    }\n    if (competitionId) {\n      query = query.eq('competition_id', competitionId);\n    }\n\n    const { data: rows, error } = await query;\n    \n    if (error) {\n      console.warn('[Supabase] getFixtures error', error);\n      return [];\n    }\n    \n    if (!rows || !rows.length) return [];\n\n    // Enrich providers in a second step\n    const ids = rows.map(r => r.id).filter(Boolean);\n    let providersByFixture: Record<number, Provider[]> = {};\n    \n    if (ids.length) {\n      const bcasts = await getBroadcastsForFixtures(ids);\n      const providerIds = Array.from(new Set(bcasts.map(b => b.provider_id).filter(Boolean)));\n      const provs = providerIds.length ? await getProvidersByIds(providerIds) : [];\n      const byPk = Object.fromEntries(provs.map(p => [p.id, p]));\n      \n      for (const b of bcasts) {\n        const fId = b.fixture_id;\n        const p = byPk[String(b.provider_id)];\n        const entry = p ? { ...p } : null;\n        if (!providersByFixture[fId]) providersByFixture[fId] = [];\n        if (entry) providersByFixture[fId].push(entry);\n      }\n    }\n    \n    let mapped = rows.map(r => mapFixtureRow(r, providersByFixture));\n\n    // Apply team filter if specified\n    if (teamSlug) {\n      mapped = mapped.filter(fx => fx.home.slug === teamSlug || fx.away.slug === teamSlug);\n    }\n    \n    // Apply filtering logic to exclude test fixtures (IDs <= 30)\n    // This matches the current SPA's filtering logic\n    mapped = mapped.filter(f => f.id && f.id > 30);\n    \n    return mapped;\n  } catch (e) {\n    console.warn('[Supabase] getFixtures error', e);\n    return [];\n  }\n}\n\nexport async function getFixtureById(id: number): Promise<Fixture | undefined> {\n  try {\n    if (!id) return undefined;\n    \n    const { data: rows, error } = await supabase\n      .from('fixtures_with_teams')\n      .select(`\n        id,matchday,utc_kickoff,venue,status,\n        home_team_id,home_name,home_slug,home_crest,\n        away_team_id,away_name,away_slug,away_crest\n      `)\n      .eq('id', id)\n      .limit(1);\n      \n    if (error) {\n      console.warn('[Supabase] getFixtureById error', error);\n      return undefined;\n    }\n    \n    const row = rows?.[0];\n    if (!row) return undefined;\n    \n    const bcasts = await getBroadcastsForFixtures([row.id]);\n    const providerIds = Array.from(new Set(bcasts.map(b => b.provider_id).filter(Boolean)));\n    const provs = providerIds.length ? await getProvidersByIds(providerIds) : [];\n    const byPk = Object.fromEntries(provs.map(p => [p.id, p]));\n    \n    const providersByFixture: Record<number, Provider[]> = {};\n    providersByFixture[row.id] = bcasts.map(b => {\n      const p = byPk[String(b.provider_id)];\n      return p ? { ...p } : null;\n    }).filter(Boolean) as Provider[];\n    \n    return mapFixtureRow(row, providersByFixture);\n  } catch (e) {\n    console.warn('[Supabase] getFixtureById error', e);\n    return undefined;\n  }\n}\n\n// Admin API functions\n\nexport interface AdminFixture extends Fixture {\n  broadcast?: {\n    provider_id: number;\n    provider_display_name?: string;\n    channel?: string;\n  } | null;\n}\n\nexport const BROADCASTERS = [\n  { id: 1, name: 'Sky Sports', type: 'tv' },\n  { id: 2, name: 'TNT Sports', type: 'tv' },\n  { id: 3, name: 'BBC Sport', type: 'tv' },\n  { id: 4, name: 'Amazon Prime Video', type: 'streaming' },\n  { id: -1, name: 'ðŸš« Blackout (No TV)', type: 'blackout' }\n];\n\nexport async function getAdminFixtures(competitionId: number = 1): Promise<AdminFixture[]> {\n  try {\n    // Get fixtures from current season\n    const currentSeasonStart = '2024-08-01T00:00:00.000Z';\n    \n    const { data: rows, error } = await supabase\n      .from('fixtures_with_teams')\n      .select(`\n        id,matchday,utc_kickoff,venue,status,\n        home_team_id,home_name,home_slug,home_crest,\n        away_team_id,away_name,away_slug,away_crest\n      `)\n      .eq('competition_id', competitionId)\n      .gte('utc_kickoff', currentSeasonStart)\n      .order('utc_kickoff', { ascending: true });\n      \n    if (error) {\n      console.warn('[Supabase] getAdminFixtures error', error);\n      return [];\n    }\n    \n    if (!rows || !rows.length) return [];\n\n    // Apply same filtering as main app (exclude test fixtures)\n    const validRows = rows.filter(r => r.id && r.id > 30);\n    \n    // Get all broadcasts for these fixtures\n    const fixtureIds = validRows.map(r => r.id);\n    const { data: broadcasts, error: broadcastError } = await supabase\n      .from('broadcasts')\n      .select('fixture_id,provider_id')\n      .in('fixture_id', fixtureIds);\n      \n    if (broadcastError) {\n      console.warn('[Supabase] Error loading broadcasts:', broadcastError);\n    }\n    \n    // Create broadcast lookup\n    const broadcastLookup: Record<number, BroadcastRow> = {};\n    (broadcasts || []).forEach(b => {\n      broadcastLookup[b.fixture_id] = b;\n    });\n    \n    // Map fixtures with broadcast info\n    const adminFixtures: AdminFixture[] = validRows.map(row => {\n      const broadcast = broadcastLookup[row.id] || null;\n      const fixture = mapFixtureRow(row);\n      \n      return {\n        ...fixture,\n        broadcast: broadcast ? {\n          provider_id: broadcast.provider_id,\n          provider_display_name: BROADCASTERS.find(b => b.id === broadcast.provider_id)?.name || 'Unknown'\n        } : null\n      };\n    });\n    \n    return adminFixtures;\n  } catch (e) {\n    console.warn('[Supabase] getAdminFixtures error', e);\n    return [];\n  }\n}\n\nexport async function saveBroadcast(fixtureId: number, providerId: number | string | null): Promise<void> {\n  try {\n    if (providerId === '' || providerId === '0' || providerId === '-1' || providerId === null) {\n      // Delete existing broadcast record\n      const { error } = await supabase\n        .from('broadcasts')\n        .delete()\n        .eq('fixture_id', fixtureId);\n        \n      if (error) {\n        throw error;\n      }\n      \n      // Handle blackout localStorage logic\n      if (providerId === '-1') {\n        const blackoutFixtures = JSON.parse(localStorage.getItem('blackoutFixtures') || '[]');\n        if (!blackoutFixtures.includes(fixtureId)) {\n          blackoutFixtures.push(fixtureId);\n          localStorage.setItem('blackoutFixtures', JSON.stringify(blackoutFixtures));\n        }\n      } else {\n        // Remove from blackout list if setting to empty\n        const blackoutFixtures = JSON.parse(localStorage.getItem('blackoutFixtures') || '[]');\n        const updatedBlackout = blackoutFixtures.filter((id: number) => id !== fixtureId);\n        localStorage.setItem('blackoutFixtures', JSON.stringify(updatedBlackout));\n      }\n    } else {\n      // Add/update broadcaster - remove from blackout list first\n      const blackoutFixtures = JSON.parse(localStorage.getItem('blackoutFixtures') || '[]');\n      const updatedBlackout = blackoutFixtures.filter((id: number) => id !== fixtureId);\n      localStorage.setItem('blackoutFixtures', JSON.stringify(updatedBlackout));\n      \n      const broadcastData = {\n        fixture_id: fixtureId,\n        provider_id: parseInt(String(providerId))\n      };\n      \n      // Upsert the broadcast record\n      const { error } = await supabase\n        .from('broadcasts')\n        .upsert(broadcastData);\n        \n      if (error) {\n        throw error;\n      }\n    }\n  } catch (e) {\n    console.error('[Supabase] saveBroadcast error', e);\n    throw e;\n  }\n}\n\n// Blackout helper functions\nexport function isFixtureBlackout(fixtureId: number): boolean {\n  const blackoutFixtures = JSON.parse(localStorage.getItem('blackoutFixtures') || '[]');\n  return blackoutFixtures.includes(fixtureId);\n}\n\nexport function isFixtureConfirmed(fixture: AdminFixture): boolean {\n  return !!(fixture.broadcast && fixture.broadcast.provider_id && !isFixtureBlackout(fixture.id));\n}\n\nexport function isFixturePending(fixture: AdminFixture): boolean {\n  return !fixture.broadcast && !isFixtureBlackout(fixture.id);\n}\n\n// Teams API\nexport async function getTeams(): Promise<Team[]> {\n  try {\n    const { data, error } = await supabase\n      .from('teams')\n      .select('id,name,slug,crest')\n      .order('name', { ascending: true });\n\n    if (error) {\n      console.warn('[Supabase] getTeams error', error);\n      return [];\n    }\n    return (data || []).map((t: any) => ({\n      id: t.id,\n      name: t.name,\n      slug: t.slug,\n      crest: t.crest ?? null,\n    }));\n  } catch (e) {\n    console.warn('[Supabase] getTeams error', e);\n    return [];\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}