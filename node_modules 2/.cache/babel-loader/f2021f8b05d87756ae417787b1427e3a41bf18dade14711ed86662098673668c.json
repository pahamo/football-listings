{"ast":null,"code":"var _jsxFileName = \"/Users/p/Documents/pl_tv_mvp_spa/react-version/src/components/StructuredData.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StructuredData = ({\n  type,\n  data\n}) => {\n  const generateMatchStructuredData = fixture => {\n    const isSimpleFixture = 'home_team' in fixture;\n    const homeTeam = isSimpleFixture ? fixture.home_team : fixture.home.name;\n    const awayTeam = isSimpleFixture ? fixture.away_team : fixture.away.name;\n    const venue = !isSimpleFixture && fixture.venue ? fixture.venue : undefined;\n    const kickoffDate = new Date(fixture.kickoff_utc).toISOString();\n\n    // Generate SEO-friendly URL for the match\n    const matchUrl = isSimpleFixture ? `https://fixturesapp.netlify.app/matches/${fixture.id}-${homeTeam.toLowerCase().replace(/\\s+/g, '-')}-vs-${awayTeam.toLowerCase().replace(/\\s+/g, '-')}-${kickoffDate.split('T')[0]}` : `https://fixturesapp.netlify.app/matches/${fixture.id}-${fixture.home.name.toLowerCase().replace(/\\s+/g, '-')}-vs-${fixture.away.name.toLowerCase().replace(/\\s+/g, '-')}-${kickoffDate.split('T')[0]}`;\n    return {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"SportsEvent\",\n      \"name\": `${homeTeam} vs ${awayTeam}`,\n      \"description\": `Premier League match between ${homeTeam} and ${awayTeam}`,\n      \"startDate\": kickoffDate,\n      \"sport\": {\n        \"@type\": \"Sport\",\n        \"name\": \"Football\"\n      },\n      \"homeTeam\": {\n        \"@type\": \"SportsTeam\",\n        \"name\": homeTeam,\n        \"sport\": \"Football\"\n      },\n      \"awayTeam\": {\n        \"@type\": \"SportsTeam\",\n        \"name\": awayTeam,\n        \"sport\": \"Football\"\n      },\n      \"competitor\": [{\n        \"@type\": \"SportsTeam\",\n        \"name\": homeTeam,\n        \"sport\": \"Football\"\n      }, {\n        \"@type\": \"SportsTeam\",\n        \"name\": awayTeam,\n        \"sport\": \"Football\"\n      }],\n      \"organizer\": {\n        \"@type\": \"SportsOrganization\",\n        \"name\": \"Premier League\",\n        \"url\": \"https://www.premierleague.com\"\n      },\n      ...(venue && {\n        \"location\": {\n          \"@type\": \"Place\",\n          \"name\": venue\n        }\n      }),\n      \"url\": `https://fixturesapp.netlify.app/matches/${fixture.id}`,\n      \"isAccessibleForFree\": false,\n      \"eventStatus\": \"https://schema.org/EventScheduled\"\n    };\n  };\n  const generateOrganizationStructuredData = () => {\n    return {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"Organization\",\n      \"name\": \"fixtures.app\",\n      \"description\": \"Premier League TV Schedule for UK - Sky Sports & TNT Sports fixtures\",\n      \"url\": \"https://fixturesapp.netlify.app\",\n      \"logo\": \"https://fixturesapp.netlify.app/logo192.png\",\n      \"sameAs\": [\"https://fixturesapp.netlify.app\"],\n      \"foundingDate\": \"2024\",\n      \"knowsAbout\": [\"Premier League\", \"Football Television Broadcasting\", \"UK Sports TV Guide\", \"Sky Sports\", \"TNT Sports\"]\n    };\n  };\n  const generateWebsiteStructuredData = () => {\n    return {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"WebSite\",\n      \"name\": \"fixtures.app - Premier League TV Guide UK\",\n      \"description\": \"Premier League TV Guide UK - Sky Sports & TNT Sports fixtures. Find which broadcaster shows every Premier League match.\",\n      \"url\": \"https://fixturesapp.netlify.app\",\n      \"potentialAction\": {\n        \"@type\": \"SearchAction\",\n        \"target\": {\n          \"@type\": \"EntryPoint\",\n          \"urlTemplate\": \"https://fixturesapp.netlify.app/fixtures?q={search_term_string}\"\n        },\n        \"query-input\": \"required name=search_term_string\"\n      },\n      \"about\": {\n        \"@type\": \"Thing\",\n        \"name\": \"Premier League TV Broadcasting\"\n      }\n    };\n  };\n  let structuredData;\n  switch (type) {\n    case 'match':\n      if (!data) return null;\n      structuredData = generateMatchStructuredData(data);\n      break;\n    case 'organization':\n      structuredData = generateOrganizationStructuredData();\n      break;\n    case 'website':\n      structuredData = generateWebsiteStructuredData();\n      break;\n    default:\n      return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"script\", {\n    type: \"application/ld+json\",\n    dangerouslySetInnerHTML: {\n      __html: JSON.stringify(structuredData, null, 2)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_c = StructuredData;\nexport default StructuredData;\nvar _c;\n$RefreshReg$(_c, \"StructuredData\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StructuredData","type","data","generateMatchStructuredData","fixture","isSimpleFixture","homeTeam","home_team","home","name","awayTeam","away_team","away","venue","undefined","kickoffDate","Date","kickoff_utc","toISOString","matchUrl","id","toLowerCase","replace","split","generateOrganizationStructuredData","generateWebsiteStructuredData","structuredData","dangerouslySetInnerHTML","__html","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/p/Documents/pl_tv_mvp_spa/react-version/src/components/StructuredData.tsx"],"sourcesContent":["import React from 'react';\nimport type { Fixture } from '../types';\nimport type { SimpleFixture } from '../services/supabase-simple';\n\ninterface StructuredDataProps {\n  type: 'match' | 'organization' | 'website';\n  data?: Fixture | SimpleFixture;\n}\n\nconst StructuredData: React.FC<StructuredDataProps> = ({ type, data }) => {\n  const generateMatchStructuredData = (fixture: Fixture | SimpleFixture) => {\n    const isSimpleFixture = 'home_team' in fixture;\n    \n    const homeTeam = isSimpleFixture ? fixture.home_team : fixture.home.name;\n    const awayTeam = isSimpleFixture ? fixture.away_team : fixture.away.name;\n    const venue = !isSimpleFixture && fixture.venue ? fixture.venue : undefined;\n    \n    const kickoffDate = new Date(fixture.kickoff_utc).toISOString();\n    \n    // Generate SEO-friendly URL for the match\n    const matchUrl = isSimpleFixture ? \n      `https://fixturesapp.netlify.app/matches/${fixture.id}-${homeTeam.toLowerCase().replace(/\\s+/g, '-')}-vs-${awayTeam.toLowerCase().replace(/\\s+/g, '-')}-${kickoffDate.split('T')[0]}` :\n      `https://fixturesapp.netlify.app/matches/${fixture.id}-${fixture.home.name.toLowerCase().replace(/\\s+/g, '-')}-vs-${fixture.away.name.toLowerCase().replace(/\\s+/g, '-')}-${kickoffDate.split('T')[0]}`;\n    \n    return {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"SportsEvent\",\n      \"name\": `${homeTeam} vs ${awayTeam}`,\n      \"description\": `Premier League match between ${homeTeam} and ${awayTeam}`,\n      \"startDate\": kickoffDate,\n      \"sport\": {\n        \"@type\": \"Sport\",\n        \"name\": \"Football\"\n      },\n      \"homeTeam\": {\n        \"@type\": \"SportsTeam\",\n        \"name\": homeTeam,\n        \"sport\": \"Football\"\n      },\n      \"awayTeam\": {\n        \"@type\": \"SportsTeam\", \n        \"name\": awayTeam,\n        \"sport\": \"Football\"\n      },\n      \"competitor\": [\n        {\n          \"@type\": \"SportsTeam\",\n          \"name\": homeTeam,\n          \"sport\": \"Football\"\n        },\n        {\n          \"@type\": \"SportsTeam\",\n          \"name\": awayTeam,\n          \"sport\": \"Football\"\n        }\n      ],\n      \"organizer\": {\n        \"@type\": \"SportsOrganization\",\n        \"name\": \"Premier League\",\n        \"url\": \"https://www.premierleague.com\"\n      },\n      ...(venue && {\n        \"location\": {\n          \"@type\": \"Place\",\n          \"name\": venue\n        }\n      }),\n      \"url\": `https://fixturesapp.netlify.app/matches/${fixture.id}`,\n      \"isAccessibleForFree\": false,\n      \"eventStatus\": \"https://schema.org/EventScheduled\"\n    };\n  };\n\n  const generateOrganizationStructuredData = () => {\n    return {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"Organization\", \n      \"name\": \"fixtures.app\",\n      \"description\": \"Premier League TV Schedule for UK - Sky Sports & TNT Sports fixtures\",\n      \"url\": \"https://fixturesapp.netlify.app\",\n      \"logo\": \"https://fixturesapp.netlify.app/logo192.png\",\n      \"sameAs\": [\n        \"https://fixturesapp.netlify.app\"\n      ],\n      \"foundingDate\": \"2024\",\n      \"knowsAbout\": [\n        \"Premier League\",\n        \"Football Television Broadcasting\",\n        \"UK Sports TV Guide\",\n        \"Sky Sports\",\n        \"TNT Sports\"\n      ]\n    };\n  };\n\n  const generateWebsiteStructuredData = () => {\n    return {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"WebSite\",\n      \"name\": \"fixtures.app - Premier League TV Guide UK\",\n      \"description\": \"Premier League TV Guide UK - Sky Sports & TNT Sports fixtures. Find which broadcaster shows every Premier League match.\",\n      \"url\": \"https://fixturesapp.netlify.app\",\n      \"potentialAction\": {\n        \"@type\": \"SearchAction\",\n        \"target\": {\n          \"@type\": \"EntryPoint\",\n          \"urlTemplate\": \"https://fixturesapp.netlify.app/fixtures?q={search_term_string}\"\n        },\n        \"query-input\": \"required name=search_term_string\"\n      },\n      \"about\": {\n        \"@type\": \"Thing\",\n        \"name\": \"Premier League TV Broadcasting\"\n      }\n    };\n  };\n\n  let structuredData;\n  \n  switch (type) {\n    case 'match':\n      if (!data) return null;\n      structuredData = generateMatchStructuredData(data);\n      break;\n    case 'organization':\n      structuredData = generateOrganizationStructuredData();\n      break;\n    case 'website':\n      structuredData = generateWebsiteStructuredData();\n      break;\n    default:\n      return null;\n  }\n\n  return (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{\n        __html: JSON.stringify(structuredData, null, 2)\n      }}\n    />\n  );\n};\n\nexport default StructuredData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}