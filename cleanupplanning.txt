REPOSITORY CLEANUP PLAN - EXECUTION INSTRUCTIONS
================================================
Date: September 25, 2025
Repository: pl_tv_mvp_spa

IMPORTANT: Review each section before executing. Some files may have been updated since this analysis.
          Always verify file contents before deletion to ensure nothing critical is removed.

==============================================================================
SECTION 1: DELETE OBSOLETE TEST/DEBUG FILES
==============================================================================

Execute these commands to remove test/debug files:

```bash
# Remove Netlify test/debug functions (already marked for deletion in git)
git rm netlify/functions/debug-save-broadcaster.js
git rm netlify/functions/test-broadcaster.js
git rm netlify/functions/test-upsert.js

# Remove debug logs and test files
rm sync_debug.log
rm netlify-check.txt
rm h2h-urls.txt
```

Verification: These files are test/debug artifacts not used in production.

==============================================================================
SECTION 2: CLEAN UP SCRIPTS DIRECTORY
==============================================================================

Remove duplicate backup directories:
```bash
# Remove duplicate backup directories
rm -rf "scripts/Scripts backup"
rm -rf "scripts backup"

# Remove test scripts
rm scripts/test-score-import.js
rm scripts/test-database-direct.js
rm scripts/test-simple-score.js
rm scripts/test-scores-api.js

# Archive or remove old import scripts (verify they're not in package.json scripts first)
rm scripts/import-scores.js
rm scripts/import-scores-fixed.js
```

CAUTION: Check package.json to ensure none of these scripts are referenced.

==============================================================================
SECTION 3: SQL FILES CONSOLIDATION
==============================================================================

Move old SQL files to archive or delete:
```bash
# Create archive directory if needed
mkdir -p docs/archive/sql

# Move old migration files
mv add_production_visibility_column.sql docs/archive/sql/
mv investigate_missing_fixtures.sql docs/archive/sql/

# Review and potentially archive setup SQL files
# CHECK FIRST: These might be needed for fresh deployments
ls scripts/setup-*.sql
# If obsolete, move them:
# mv scripts/setup-*.sql docs/archive/sql/
```

==============================================================================
SECTION 4: REMOVE UNUSED CSS FILES
==============================================================================

Delete CSS files that aren't imported anywhere:
```bash
# These files are not imported in any component
rm src/critical.css
rm src/non-critical.css

# Keep these - they are actively used:
# - src/App.css (imported in App.tsx)
# - src/index.css (imported in index.tsx)
```

==============================================================================
SECTION 5: CLEAN UP ROOT LEVEL FILES
==============================================================================

Remove one-off scripts and templates:
```bash
# Remove duplicate/one-off scripts
rm export-teams-csv.js  # duplicate of netlify/functions/export-teams-csv.js
rm extract-teams.js      # one-off extraction script
rm create-teams-csv.mjs  # one-off creation script

# Review before removing - may contain data
# rm teams-template.csv   # template file
# rm teams-slugs.csv      # if data is now in database
```

==============================================================================
SECTION 6: DOCUMENTATION CLEANUP
==============================================================================

Consolidate documentation:
```bash
# Archive old docs if not already there
# Review each file in docs/archive/ - delete truly obsolete ones

# Keep main documentation files:
# - README.md (main)
# - docs/ARCHITECTURE.md
# - docs/ADMIN_GUIDE.md
# - ADMIN_FUNCTIONS.md (critical for production)

# Consider removing if outdated:
# - Multiple README files in subdirectories
```

==============================================================================
SECTION 7: TEST FILES REVIEW
==============================================================================

Handle test utilities:
```bash
# Review src/App.test.tsx - it's a minimal placeholder
# Either implement proper tests or remove:
# rm src/App.test.tsx

# Move or remove H2H test utility
# Option 1: Move to proper test directory
mkdir -p src/__tests__/utils
mv src/utils/testH2H.ts src/__tests__/utils/

# Option 2: Remove if not needed
# rm src/utils/testH2H.ts
```

==============================================================================
SECTION 8: HANDLE UNCOMMITTED WORK
==============================================================================

IMPORTANT: Make a decision on uncommitted slug migration work first!

Check status:
```bash
git status
```

Currently uncommitted files include:
- netlify/functions/add-url-slug-column.js
- netlify/functions/generate-smart-slugs.js
- netlify/functions/generate-team-redirects.js
- netlify/functions/update-team-url-slug.js
- scripts/update-team-slugs.js
- src/utils/slugUtils.ts
- DEPLOYMENT_CHECKLIST.md
- SLUG_MIGRATION.md

Decision needed:
1. If keeping slug migration: commit these files
2. If abandoning: remove these files

==============================================================================
SECTION 9: GIT BRANCH CLEANUP
==============================================================================

Remove old backup branches (verify they're pushed to remote first):
```bash
# List all branches
git branch -a

# Delete local backup branches
git branch -d backup-spa-version
git branch -d design-backup
git branch -d spa-final-backup

# Delete remote backup branches (BE VERY CAREFUL)
# git push origin --delete backup-spa-version
# git push origin --delete backup/broken-20250910-152245
```

==============================================================================
SECTION 10: UPDATE .GITIGNORE
==============================================================================

Add patterns to prevent future accumulation:
```bash
echo "
# Debug and test files
*.log
*.tmp
*.bak
*-debug.*
*-test.*
sync_debug.log

# Editor files
.idea/
.vscode/settings.json
*.swp
*.swo

# OS files
.DS_Store
Thumbs.db
" >> .gitignore
```

==============================================================================
ESTIMATED IMPACT
==============================================================================

This cleanup will:
- Remove ~40+ obsolete files
- Free up repository space
- Reduce confusion for developers
- Improve code navigation
- Make deployment cleaner

Total files to be removed/moved: ~45-50 files
Estimated size reduction: ~500KB-1MB

==============================================================================
EXECUTION ORDER
==============================================================================

Recommended execution sequence:
1. First, handle uncommitted work (Section 8)
2. Create backups: `git stash` or create a backup branch
3. Execute Sections 1-7 in order
4. Test the application still builds: `npm run build`
5. Commit changes with message: "chore: major repository cleanup - remove obsolete files"
6. Clean up git branches (Section 9)
7. Update .gitignore (Section 10)

==============================================================================
FINAL CHECKLIST
==============================================================================

Before committing:
[ ] Application builds successfully (`npm run build`)
[ ] No broken imports or references
[ ] Package.json scripts still work
[ ] Netlify functions that remain are production-ready
[ ] Documentation is up to date
[ ] No critical data files were removed

After cleanup:
[ ] Push changes to remote
[ ] Verify deployment still works
[ ] Team is informed of changes
[ ] Update any deployment scripts if needed

==============================================================================
NOTES
==============================================================================

- The "scripts backup" and "Scripts backup" directories are duplicates from September 18
- Most test-*.js files haven't been modified since initial creation
- The slug migration work appears to be in progress - needs decision
- Some SQL files might be needed for fresh database setup - verify before removing
- Consider creating a "cleanup-backup" branch before starting

END OF CLEANUP PLAN